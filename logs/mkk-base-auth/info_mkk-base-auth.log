[2020-12-17 11:27:42.219] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 11:27:42.452] [main] Post-processing PropertySource instances 
[2020-12-17 11:27:42.497] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 11:27:42.497] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:42.497] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:42.498] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:42.498] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 11:27:42.498] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:42.498] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:42.527] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 11:27:42.530] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 11:27:42.531] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 11:27:42.897] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 11:27:42.898] [main] The following profiles are active: dev 
[2020-12-17 11:27:43.468] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 11:27:43.471] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 11:27:43.653] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 11:27:43.654] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 11:27:43.671] [main] Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces. 
[2020-12-17 11:27:43.731] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 11:27:43.806] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 11:27:43.816] [main] Post-processing PropertySource instances 
[2020-12-17 11:27:43.825] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 11:27:43.826] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 11:27:43.826] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 11:27:43.835] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 11:27:44.042] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 11:27:44.042] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 11:27:44.094] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 11:27:44.166] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 11:27:44.343] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 11:27:44.364] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 11:27:44.364] [main] Root WebApplicationContext: initialization completed in 1452 ms 
[2020-12-17 11:27:44.872] [main] Initializing ExecutorService 
[2020-12-17 11:27:45.126] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 11:27:45.126] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 11:27:45.129] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 11:27:45.129] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 11:27:45.242] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 11:27:45.274] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 11:27:45.566] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 11:27:45.572] [main] initializer namespace from System Property :null 
[2020-12-17 11:27:45.572] [main] initializer namespace from System Environment :null 
[2020-12-17 11:27:45.572] [main] initializer namespace from System Property :null 
[2020-12-17 11:27:45.961] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 11:27:46.017] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62b42406, org.springframework.security.web.context.SecurityContextPersistenceFilter@69e36fe3, org.springframework.security.web.header.HeaderWriterFilter@56b751b1, org.springframework.security.web.authentication.logout.LogoutFilter@30ef32eb, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@20a946d9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@16944b58, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46188a89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71ee2fff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a0e33db, org.springframework.security.web.session.SessionManagementFilter@5f5a33ed, org.springframework.security.web.access.ExceptionTranslationFilter@163df259, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12421766] 
[2020-12-17 11:27:46.021] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@cfacf0, org.springframework.security.web.context.SecurityContextPersistenceFilter@24dc150c, org.springframework.security.web.header.HeaderWriterFilter@6a552721, org.springframework.security.web.authentication.logout.LogoutFilter@f0c1ae1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@783dc0e7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d2d4d7a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e020dd1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c8abec7, org.springframework.security.web.session.SessionManagementFilter@3815a7d1, org.springframework.security.web.access.ExceptionTranslationFilter@632b5c79, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39ae6408] 
[2020-12-17 11:27:46.445] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 11:27:46.451] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 11:27:46.623] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 11:27:46.629] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 11:27:46.635] [main] XNIO version 3.8.0.Final 
[2020-12-17 11:27:46.641] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 11:27:46.809] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 11:27:46.846] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 11:27:46.849] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 11:27:46.850] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 11:27:46.852] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 11:27:47.054] [main] Started AuthApplication in 5.426 seconds (JVM running for 6.075) 
[2020-12-17 11:27:47.057] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 11:27:47.058] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 11:27:47.058] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 11:27:47.058] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 11:27:47.058] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 11:27:47.059] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 11:27:47.232] [RMI TCP Connection(7)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 11:27:47.232] [RMI TCP Connection(7)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 11:27:47.238] [RMI TCP Connection(7)-192.168.139.1] Completed initialization in 6 ms 
[2020-12-17 11:27:47.630] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 11:27:47.632] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 11:27:48.289] [RMI TCP Connection(8)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 11:28:39.736] [XNIO-1 task-1] 用户：com.cloud.mkk.common.security.service.MicroUser@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_1,gen_form_add,gen_form_del,gen_form_edit,sys_client_add,sys_client_del,sys_client_edit,sys_dept_add,sys_dept_del,sys_dept_edit,sys_dict_add,sys_dict_del,sys_dict_edit,sys_log_del,sys_menu_add,sys_menu_del,sys_menu_edit,sys_role_add,sys_role_del,sys_role_edit,sys_role_perm,sys_token_del,sys_user_add,sys_user_del,sys_user_edit 登录成功 
[2020-12-17 13:16:27.544] [XNIO-1 task-3] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 13:16:27.571] [XNIO-1 task-3] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：28 毫秒 
[2020-12-17 13:16:32.436] [XNIO-1 task-3] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:16:32.449] [XNIO-1 task-3] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 13:16:32.454] [XNIO-1 task-3] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 13:16:32.458] [XNIO-1 task-3] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:16:32.458] [XNIO-1 task-3] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:16:32.467] [XNIO-1 task-3] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:16:32.468] [XNIO-1 task-3] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@b72a60a 
[2020-12-17 13:16:32.630] [XNIO-1 task-3] 用户：com.cloud.mkk.common.security.service.MicroUser@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_1,gen_form_add,gen_form_del,gen_form_edit,sys_client_add,sys_client_del,sys_client_edit,sys_dept_add,sys_dept_del,sys_dept_edit,sys_dict_add,sys_dict_del,sys_dict_edit,sys_log_del,sys_menu_add,sys_menu_del,sys_menu_edit,sys_role_add,sys_role_del,sys_role_edit,sys_role_perm,sys_token_del,sys_user_add,sys_user_del,sys_user_edit 登录成功 
[2020-12-17 13:16:33.458] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:16:48.155] [XNIO-1 task-3] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 13:16:48.168] [XNIO-1 task-3] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：13 毫秒 
[2020-12-17 13:16:56.335] [XNIO-1 task-3] 用户：com.cloud.mkk.common.security.service.MicroUser@586034f: Username: admin; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_1,gen_form_add,gen_form_del,gen_form_edit,sys_client_add,sys_client_del,sys_client_edit,sys_dept_add,sys_dept_del,sys_dept_edit,sys_dict_add,sys_dict_del,sys_dict_edit,sys_log_del,sys_menu_add,sys_menu_del,sys_menu_edit,sys_role_add,sys_role_del,sys_role_edit,sys_role_perm,sys_token_del,sys_user_add,sys_user_del,sys_user_edit 登录成功 
[2020-12-17 13:17:21.560] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 13:17:21.794] [main] Post-processing PropertySource instances 
[2020-12-17 13:17:21.837] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 13:17:21.837] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:21.837] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:21.837] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:21.838] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:17:21.838] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:21.838] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:21.865] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 13:17:21.869] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 13:17:21.870] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 13:17:23.222] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 13:17:23.222] [main] The following profiles are active: dev 
[2020-12-17 13:17:23.797] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:17:23.799] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:17:23.975] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 13:17:23.976] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 13:17:23.992] [main] Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces. 
[2020-12-17 13:17:24.050] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:17:24.124] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 13:17:24.133] [main] Post-processing PropertySource instances 
[2020-12-17 13:17:24.142] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:17:24.142] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:17:24.142] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:17:24.142] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 13:17:24.143] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:17:24.143] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:17:24.151] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 13:17:24.342] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 13:17:24.342] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 13:17:24.395] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 13:17:24.465] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 13:17:24.627] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 13:17:24.647] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 13:17:24.648] [main] Root WebApplicationContext: initialization completed in 1411 ms 
[2020-12-17 13:17:25.159] [main] Initializing ExecutorService 
[2020-12-17 13:17:25.408] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 13:17:25.408] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 13:17:25.411] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 13:17:25.411] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 13:17:25.522] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 13:17:25.551] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 13:17:26.813] [main] Cannot determine local hostname 
[2020-12-17 13:17:26.818] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 13:17:26.823] [main] initializer namespace from System Property :null 
[2020-12-17 13:17:26.824] [main] initializer namespace from System Environment :null 
[2020-12-17 13:17:26.824] [main] initializer namespace from System Property :null 
[2020-12-17 13:17:27.198] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 13:17:27.236] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23c72128, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d0b447b, org.springframework.security.web.header.HeaderWriterFilter@69e36fe3, org.springframework.security.web.authentication.logout.LogoutFilter@702cfbde, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1214c98b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@731e0bff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f2fdf3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@87220f1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bd2430f, org.springframework.security.web.session.SessionManagementFilter@46188a89, org.springframework.security.web.access.ExceptionTranslationFilter@2f61de04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@65503a26] 
[2020-12-17 13:17:27.240] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e020dd1, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ef46749, org.springframework.security.web.header.HeaderWriterFilter@62b42406, org.springframework.security.web.authentication.logout.LogoutFilter@65da4a5d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@fbe8fd3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40b54762, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@362cf66, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4bbc02ef, org.springframework.security.web.session.SessionManagementFilter@a0e33db, org.springframework.security.web.access.ExceptionTranslationFilter@1dbc607d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d2d4d7a] 
[2020-12-17 13:17:28.577] [main] Cannot determine local hostname 
[2020-12-17 13:17:28.606] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 13:17:28.611] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 13:17:28.738] [main] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:17:28.741] [main] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:17:28.742] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 13:17:28.749] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 13:17:28.754] [main] XNIO version 3.8.0.Final 
[2020-12-17 13:17:28.759] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 13:17:28.891] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 13:17:28.926] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 13:17:28.929] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 13:17:28.930] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 13:17:28.932] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 13:17:30.111] [main] Cannot determine local hostname 
[2020-12-17 13:17:30.122] [main] Started AuthApplication in 10.158 seconds (JVM running for 10.846) 
[2020-12-17 13:17:30.125] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 13:17:30.126] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:17:30.126] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 13:17:30.126] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:17:30.126] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 13:17:30.126] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:17:30.858] [RMI TCP Connection(2)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 13:17:30.858] [RMI TCP Connection(2)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 13:17:30.865] [RMI TCP Connection(2)-192.168.139.1] Completed initialization in 7 ms 
[2020-12-17 13:17:31.906] [RMI TCP Connection(3)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 13:17:39.498] [XNIO-1 task-1] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 13:17:39.632] [XNIO-1 task-1] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：134 毫秒 
[2020-12-17 13:17:44.678] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:17:44.690] [XNIO-1 task-1] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 13:17:44.695] [XNIO-1 task-1] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 13:17:44.699] [XNIO-1 task-1] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:17:44.699] [XNIO-1 task-1] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:17:44.708] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:17:44.709] [XNIO-1 task-1] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@75bc316b 
[2020-12-17 13:17:44.848] [XNIO-1 task-1] 用户：admin 登录成功 
[2020-12-17 13:17:45.698] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 13:55:46.889] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 13:55:47.142] [main] Post-processing PropertySource instances 
[2020-12-17 13:55:47.190] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 13:55:47.191] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:47.191] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:47.191] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:47.191] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:55:47.191] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:47.191] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:47.221] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 13:55:47.224] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 13:55:47.225] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 13:55:47.616] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 13:55:47.616] [main] The following profiles are active: dev 
[2020-12-17 13:55:48.218] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:55:48.221] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:55:48.412] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 13:55:48.414] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 13:55:48.431] [main] Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces. 
[2020-12-17 13:55:48.491] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 13:55:48.566] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 13:55:48.577] [main] Post-processing PropertySource instances 
[2020-12-17 13:55:48.585] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 13:55:48.585] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 13:55:48.585] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 13:55:48.595] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 13:55:48.795] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 13:55:48.795] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 13:55:48.848] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 13:55:48.921] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 13:55:49.181] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 13:55:49.213] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 13:55:49.213] [main] Root WebApplicationContext: initialization completed in 1582 ms 
[2020-12-17 13:55:49.776] [main] Initializing ExecutorService 
[2020-12-17 13:55:50.044] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 13:55:50.045] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 13:55:50.048] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 13:55:50.048] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 13:55:50.168] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 13:55:50.198] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 13:55:50.489] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 13:55:50.495] [main] initializer namespace from System Property :null 
[2020-12-17 13:55:50.495] [main] initializer namespace from System Environment :null 
[2020-12-17 13:55:50.495] [main] initializer namespace from System Property :null 
[2020-12-17 13:55:50.901] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 13:55:50.955] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74e4be21, org.springframework.security.web.context.SecurityContextPersistenceFilter@69e36fe3, org.springframework.security.web.header.HeaderWriterFilter@56b751b1, org.springframework.security.web.authentication.logout.LogoutFilter@30ef32eb, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@adc3344, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2890e479, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46188a89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71ee2fff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d174189, org.springframework.security.web.session.SessionManagementFilter@5f5a33ed, org.springframework.security.web.access.ExceptionTranslationFilter@163df259, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@470c4229] 
[2020-12-17 13:55:50.959] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@361f26b4, org.springframework.security.web.context.SecurityContextPersistenceFilter@65da4a5d, org.springframework.security.web.header.HeaderWriterFilter@362cf66, org.springframework.security.web.authentication.logout.LogoutFilter@181098bf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@632b5c79, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@fbe8fd3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ab268bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d9ff1e2, org.springframework.security.web.session.SessionManagementFilter@7809b43a, org.springframework.security.web.access.ExceptionTranslationFilter@40b54762, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@783dc0e7] 
[2020-12-17 13:55:51.359] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 13:55:51.364] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 13:55:51.490] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 13:55:51.496] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 13:55:51.502] [main] XNIO version 3.8.0.Final 
[2020-12-17 13:55:51.508] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 13:55:51.537] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 13:55:51.680] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 13:55:51.683] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 13:55:51.684] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 13:55:51.686] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 13:55:51.889] [main] Started AuthApplication in 5.687 seconds (JVM running for 6.439) 
[2020-12-17 13:55:51.892] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 13:55:51.893] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:55:51.893] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 13:55:51.893] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:55:51.893] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 13:55:51.893] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 13:55:52.319] [RMI TCP Connection(5)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 13:55:52.319] [RMI TCP Connection(5)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 13:55:52.326] [RMI TCP Connection(5)-192.168.139.1] Completed initialization in 7 ms 
[2020-12-17 13:55:52.499] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:55:52.501] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 13:55:53.364] [RMI TCP Connection(6)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 13:57:00.984] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:534)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 13:57:02.998] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:524)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 13:57:12.774] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:524)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:02:05.924] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 14:02:06.167] [main] Post-processing PropertySource instances 
[2020-12-17 14:02:06.211] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:02:06.211] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:06.211] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:06.212] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:06.212] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:02:06.212] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:06.212] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:06.241] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:02:06.244] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:02:06.245] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:02:06.612] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 14:02:06.613] [main] The following profiles are active: dev 
[2020-12-17 14:02:07.190] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:02:07.193] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:02:07.374] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 14:02:07.375] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 14:02:07.393] [main] Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces. 
[2020-12-17 14:02:07.451] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:02:07.523] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 14:02:07.533] [main] Post-processing PropertySource instances 
[2020-12-17 14:02:07.543] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:02:07.543] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:02:07.543] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:02:07.552] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:02:07.744] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:02:07.744] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:02:07.797] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:02:07.867] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:02:08.032] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 14:02:08.053] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 14:02:08.053] [main] Root WebApplicationContext: initialization completed in 1427 ms 
[2020-12-17 14:02:08.564] [main] Initializing ExecutorService 
[2020-12-17 14:02:08.814] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:02:08.814] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:02:08.817] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:02:08.817] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:02:08.929] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:02:08.959] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 14:02:09.254] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:02:09.259] [main] initializer namespace from System Property :null 
[2020-12-17 14:02:09.259] [main] initializer namespace from System Environment :null 
[2020-12-17 14:02:09.259] [main] initializer namespace from System Property :null 
[2020-12-17 14:02:09.646] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 14:02:09.696] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@731e0bff, org.springframework.security.web.context.SecurityContextPersistenceFilter@46188a89, org.springframework.security.web.header.HeaderWriterFilter@5f5a33ed, org.springframework.security.web.authentication.logout.LogoutFilter@bb5f9d, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1f3361e9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@12421766, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d0b447b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37fca349, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@213ceb4e, org.springframework.security.web.session.SessionManagementFilter@69e36fe3, org.springframework.security.web.access.ExceptionTranslationFilter@3c3cd13a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24e2355c] 
[2020-12-17 14:02:09.700] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24dc150c, org.springframework.security.web.context.SecurityContextPersistenceFilter@62b42406, org.springframework.security.web.header.HeaderWriterFilter@16944b58, org.springframework.security.web.authentication.logout.LogoutFilter@362cf66, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7809b43a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a0e33db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ef46749, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d2d4d7a, org.springframework.security.web.session.SessionManagementFilter@1dbc607d, org.springframework.security.web.access.ExceptionTranslationFilter@2a984952, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3815a7d1] 
[2020-12-17 14:02:10.060] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 14:02:10.065] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 14:02:10.189] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 14:02:10.196] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 14:02:10.201] [main] XNIO version 3.8.0.Final 
[2020-12-17 14:02:10.207] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 14:02:10.341] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 14:02:10.378] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 14:02:10.381] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 14:02:10.382] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:02:10.389] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 14:02:10.593] [main] Started AuthApplication in 5.292 seconds (JVM running for 5.983) 
[2020-12-17 14:02:10.596] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 14:02:10.597] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:02:10.597] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 14:02:10.598] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:02:10.598] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 14:02:10.598] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:02:11.035] [RMI TCP Connection(1)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 14:02:11.035] [RMI TCP Connection(1)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 14:02:11.041] [RMI TCP Connection(1)-192.168.139.1] Completed initialization in 6 ms 
[2020-12-17 14:02:11.196] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:02:11.198] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:02:12.077] [RMI TCP Connection(2)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 14:03:16.261] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:534)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:04:23.069] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 14:04:23.332] [main] Post-processing PropertySource instances 
[2020-12-17 14:04:23.383] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:04:23.384] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:23.384] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:23.384] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:23.384] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:04:23.384] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:23.384] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:23.418] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:04:23.422] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:04:23.423] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:04:23.824] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 14:04:23.824] [main] The following profiles are active: dev 
[2020-12-17 14:04:24.456] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:04:24.459] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:04:24.666] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 14:04:24.668] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 14:04:24.687] [main] Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces. 
[2020-12-17 14:04:24.753] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:04:24.840] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 14:04:24.852] [main] Post-processing PropertySource instances 
[2020-12-17 14:04:24.862] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:04:24.862] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:04:24.862] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:04:24.909] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:04:25.089] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:04:25.089] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:04:25.151] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:04:25.231] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:04:25.411] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 14:04:25.435] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 14:04:25.435] [main] Root WebApplicationContext: initialization completed in 1596 ms 
[2020-12-17 14:04:26.024] [main] Initializing ExecutorService 
[2020-12-17 14:04:26.316] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:04:26.316] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:04:26.320] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:04:26.320] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:04:26.446] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:04:26.479] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 14:04:26.773] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:04:26.780] [main] initializer namespace from System Property :null 
[2020-12-17 14:04:26.780] [main] initializer namespace from System Environment :null 
[2020-12-17 14:04:26.780] [main] initializer namespace from System Property :null 
[2020-12-17 14:04:27.248] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 14:04:27.288] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34be7efb, org.springframework.security.web.context.SecurityContextPersistenceFilter@24fc9aa5, org.springframework.security.web.header.HeaderWriterFilter@28941a68, org.springframework.security.web.authentication.logout.LogoutFilter@46146832, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@78141c58, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3889c343, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7369208e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d97344c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@136cad3e, org.springframework.security.web.session.SessionManagementFilter@24ce5d4c, org.springframework.security.web.access.ExceptionTranslationFilter@52a0bc48, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a6e410c] 
[2020-12-17 14:04:27.292] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78e4fa1, org.springframework.security.web.context.SecurityContextPersistenceFilter@22561412, org.springframework.security.web.header.HeaderWriterFilter@5a941fb4, org.springframework.security.web.authentication.logout.LogoutFilter@50e4d8cd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b37d1a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@32153bbe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4806fbf7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4516c2ef, org.springframework.security.web.session.SessionManagementFilter@646ddc20, org.springframework.security.web.access.ExceptionTranslationFilter@893081e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c879f07] 
[2020-12-17 14:04:27.673] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 14:04:27.679] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 14:04:27.829] [main] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:04:27.944] [main] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:04:27.945] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 14:04:27.952] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 14:04:27.958] [main] XNIO version 3.8.0.Final 
[2020-12-17 14:04:27.965] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 14:04:27.997] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 14:04:28.041] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 14:04:28.044] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 14:04:28.045] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:04:28.046] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 14:04:28.255] [main] Started AuthApplication in 5.892 seconds (JVM running for 6.762) 
[2020-12-17 14:04:28.259] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 14:04:28.260] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:04:28.260] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 14:04:28.260] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:04:28.260] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 14:04:28.260] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:04:28.733] [RMI TCP Connection(2)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 14:04:28.733] [RMI TCP Connection(2)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 14:04:28.740] [RMI TCP Connection(2)-192.168.139.1] Completed initialization in 7 ms 
[2020-12-17 14:04:29.779] [RMI TCP Connection(3)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 14:05:38.923] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:534)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:05:38.967] [XNIO-1 task-1] Failure in @ExceptionHandler org.springframework.security.oauth2.provider.endpoint.TokenEndpoint#handleException(Exception) 
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at org.xnio.nio.NioSocketConduit.write(NioSocketConduit.java:162)
	at io.undertow.server.protocol.http.HttpResponseConduit.write(HttpResponseConduit.java:655)
	at io.undertow.conduits.ChunkedStreamSinkConduit.doWrite(ChunkedStreamSinkConduit.java:166)
	at io.undertow.conduits.ChunkedStreamSinkConduit.write(ChunkedStreamSinkConduit.java:128)
	at org.xnio.conduits.ConduitStreamSinkChannel.write(ConduitStreamSinkChannel.java:150)
	at io.undertow.channels.DetachableStreamSinkChannel.write(DetachableStreamSinkChannel.java:240)
	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.write(HttpServerExchange.java:2117)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.writeBufferBlocking(ServletOutputStreamImpl.java:575)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flushInternal(ServletOutputStreamImpl.java:490)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flush(ServletOutputStreamImpl.java:477)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:520)
	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1176)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1008)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:403)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
[2020-12-17 14:05:38.974] [XNIO-1 task-1] UT005023: Exception handling request to /oauth/token 
javax.servlet.ServletException: Unable to handle the Spring Security Exception because the response is already committed.
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:138)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	... 78 common frames omitted
Caused by: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:534)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 89 common frames omitted
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:05:39.134] [SpringContextShutdownHook] stopping server: Undertow - 2.1.4.Final 
[2020-12-17 14:05:39.138] [SpringContextShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet' 
[2020-12-17 14:05:39.138] [SpringContextShutdownHook] Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:05:39.139] [SpringContextShutdownHook] [LISTENER] removing DEFAULT_GROUP@@mkk-base-auth with DEFAULT from listener map 
[2020-12-17 14:05:39.140] [SpringContextShutdownHook] De-registering from Nacos Server now... 
[2020-12-17 14:05:39.140] [SpringContextShutdownHook] [BEAT] removing beat: DEFAULT_GROUP@@mkk-base-auth:192.168.139.1:3000 from beat map. 
[2020-12-17 14:05:39.140] [SpringContextShutdownHook] [DEREGISTER-SERVICE] public deregistering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}} 
[2020-12-17 14:05:39.141] [SpringContextShutdownHook] De-registration finished. 
[2020-12-17 14:05:39.142] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin 
[2020-12-17 14:05:42.144] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown stop 
[2020-12-17 14:05:42.145] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.EventDispatcher do shutdown begin 
[2020-12-17 14:05:45.147] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.EventDispatcher do shutdown stop 
[2020-12-17 14:05:45.147] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.HostReactor do shutdown begin 
[2020-12-17 14:05:48.149] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.PushReceiver do shutdown begin 
[2020-12-17 14:05:51.151] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.PushReceiver do shutdown stop 
[2020-12-17 14:05:51.151] [com.alibaba.nacos.naming.push.receiver] [NA] error while receiving push data 
java.net.SocketException: socket closed
	at java.net.DualStackPlainDatagramSocketImpl.socketReceiveOrPeekData(Native Method)
	at java.net.DualStackPlainDatagramSocketImpl.receive0(DualStackPlainDatagramSocketImpl.java:124)
	at java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:143)
	at java.net.DatagramSocket.receive(DatagramSocket.java:812)
	at com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:83)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2020-12-17 14:05:51.151] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown begin 
[2020-12-17 14:05:51.152] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.backups.FailoverReactor do shutdown stop 
[2020-12-17 14:05:51.152] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.core.HostReactor do shutdown stop 
[2020-12-17 14:05:51.153] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.net.NamingProxy do shutdown begin 
[2020-12-17 14:05:51.153] [SpringContextShutdownHook] [NamingHttpClientManager] Start destroying NacosRestTemplate 
[2020-12-17 14:05:51.153] [SpringContextShutdownHook] [NamingHttpClientManager] Destruction of the end 
[2020-12-17 14:05:51.153] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.net.NamingProxy do shutdown stop 
[2020-12-17 14:05:51.154] [SpringContextShutdownHook] Destroy method 'close' on bean with name 'nacosServiceRegistry' threw an exception: java.lang.NullPointerException 
[2020-12-17 14:05:51.155] [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:05:51.267] [SpringContextShutdownHook] Shutting down ExecutorService 
[2020-12-17 14:05:51.271] [SpringContextShutdownHook] {dataSource-1} closing ... 
[2020-12-17 14:05:51.273] [SpringContextShutdownHook] {dataSource-1} closed 
[2020-12-17 14:05:54.247] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 14:05:54.516] [main] Post-processing PropertySource instances 
[2020-12-17 14:05:54.568] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:05:54.569] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:54.569] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:54.569] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:54.569] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:05:54.569] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:54.569] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:54.602] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:05:54.607] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:05:54.608] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:05:55.000] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 14:05:55.000] [main] The following profiles are active: dev 
[2020-12-17 14:05:55.627] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:05:55.630] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:05:55.831] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 14:05:55.833] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 14:05:55.853] [main] Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces. 
[2020-12-17 14:05:55.922] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:05:56.007] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 14:05:56.020] [main] Post-processing PropertySource instances 
[2020-12-17 14:05:56.029] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:05:56.029] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:05:56.029] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:05:56.029] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:05:56.029] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:05:56.029] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:05:56.029] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:05:56.030] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:05:56.075] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:05:56.251] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:05:56.251] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:05:56.310] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:05:56.390] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:05:56.581] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 14:05:56.604] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 14:05:56.604] [main] Root WebApplicationContext: initialization completed in 1589 ms 
[2020-12-17 14:05:57.199] [main] Initializing ExecutorService 
[2020-12-17 14:05:57.498] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:05:57.498] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:05:57.502] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:05:57.502] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:05:57.626] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:05:57.660] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 14:05:57.957] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:05:57.963] [main] initializer namespace from System Property :null 
[2020-12-17 14:05:57.963] [main] initializer namespace from System Environment :null 
[2020-12-17 14:05:57.963] [main] initializer namespace from System Property :null 
[2020-12-17 14:05:58.421] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 14:05:58.466] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ac4f31d, org.springframework.security.web.context.SecurityContextPersistenceFilter@32ae11c9, org.springframework.security.web.header.HeaderWriterFilter@1977b0df, org.springframework.security.web.authentication.logout.LogoutFilter@6097f225, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@7e4dddee, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@37a14aa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14980819, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19542115, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@106f2425, org.springframework.security.web.session.SessionManagementFilter@7890fbf9, org.springframework.security.web.access.ExceptionTranslationFilter@23909b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@374bf34b] 
[2020-12-17 14:05:58.470] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@531b1778, org.springframework.security.web.context.SecurityContextPersistenceFilter@7cb38a6a, org.springframework.security.web.header.HeaderWriterFilter@6d84ab90, org.springframework.security.web.authentication.logout.LogoutFilter@7091a016, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@14580edc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7983a5d5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3113595e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ecfff32, org.springframework.security.web.session.SessionManagementFilter@3182143c, org.springframework.security.web.access.ExceptionTranslationFilter@629cf53c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f09ff10] 
[2020-12-17 14:05:58.855] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 14:05:58.860] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 14:05:59.004] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 14:05:59.012] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 14:05:59.018] [main] XNIO version 3.8.0.Final 
[2020-12-17 14:05:59.206] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 14:05:59.242] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 14:05:59.284] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 14:05:59.288] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 14:05:59.288] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:05:59.291] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 14:05:59.502] [main] Started AuthApplication in 5.931 seconds (JVM running for 6.718) 
[2020-12-17 14:05:59.506] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 14:05:59.507] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:05:59.507] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 14:05:59.507] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:05:59.507] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 14:05:59.507] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:05:59.975] [RMI TCP Connection(3)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 14:05:59.975] [RMI TCP Connection(3)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 14:05:59.982] [RMI TCP Connection(3)-192.168.139.1] Completed initialization in 7 ms 
[2020-12-17 14:06:00.011] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:06:00.014] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:06:00.797] [RMI TCP Connection(1)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 14:07:07.103] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:534)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:10:47.946] [XNIO-1 task-1] Handling error: InternalAuthenticationServiceException, Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500 
org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:524)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:10:47.953] [XNIO-1 task-1] Failure in @ExceptionHandler org.springframework.security.oauth2.provider.endpoint.TokenEndpoint#handleException(Exception) 
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at org.xnio.nio.NioSocketConduit.write(NioSocketConduit.java:162)
	at io.undertow.server.protocol.http.HttpResponseConduit.write(HttpResponseConduit.java:655)
	at io.undertow.conduits.ChunkedStreamSinkConduit.doWrite(ChunkedStreamSinkConduit.java:166)
	at io.undertow.conduits.ChunkedStreamSinkConduit.write(ChunkedStreamSinkConduit.java:128)
	at org.xnio.conduits.ConduitStreamSinkChannel.write(ConduitStreamSinkChannel.java:150)
	at io.undertow.channels.DetachableStreamSinkChannel.write(DetachableStreamSinkChannel.java:240)
	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.write(HttpServerExchange.java:2117)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.writeBufferBlocking(ServletOutputStreamImpl.java:575)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flushInternal(ServletOutputStreamImpl.java:490)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flush(ServletOutputStreamImpl.java:477)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:520)
	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1176)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1008)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:403)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
[2020-12-17 14:10:47.957] [XNIO-1 task-1] UT005023: Exception handling request to /oauth/token 
javax.servlet.ServletException: Unable to handle the Spring Security Exception because the response is already committed.
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:138)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	... 78 common frames omitted
Caused by: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:219)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:524)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 89 common frames omitted
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:84)
	at org.springframework.data.redis.serializer.DefaultRedisElementReader.read(DefaultRedisElementReader.java:48)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.read(RedisSerializationContext.java:272)
	at org.springframework.data.redis.cache.RedisCache.deserializeCacheValue(RedisCache.java:260)
	at org.springframework.data.redis.cache.RedisCache.lookup(RedisCache.java:94)
	at org.springframework.cache.support.AbstractValueAdaptingCache.get(AbstractValueAdaptingCache.java:58)
	at com.cloud.mkk.common.security.service.MicroUserDetailsServiceImpl.loadUserByUsername(MicroUserDetailsServiceImpl.java:53)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 112 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82)
	... 119 common frames omitted
Caused by: java.io.InvalidClassException: com.cloud.mkk.common.security.service.MicroUser; local class incompatible: stream classdesc serialVersionUID = -9167525176160156619, local class serialVersionUID = 5366722528195906500
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:699)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1885)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1751)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2042)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:72)
	at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73)
	... 121 common frames omitted
[2020-12-17 14:23:03.461] [XNIO-1 task-1] discard long time none received connection. , jdbcUrl : jdbc:mysql://10.101.128.148:3306/pig?characterEncoding=utf8&serverTimezone=GMT%2B8&allowMultiQueries=true, version : 1.2.4, lastPacketReceivedIdleMillis : 1022293 
[2020-12-17 14:23:03.728] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:23:03.765] [XNIO-1 task-1] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 14:23:03.771] [XNIO-1 task-1] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 14:23:03.776] [XNIO-1 task-1] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:23:03.776] [XNIO-1 task-1] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:23:03.785] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:23:03.787] [XNIO-1 task-1] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@19a22972 
[2020-12-17 14:23:04.305] [XNIO-1 task-1] 用户：admin 登录成功 
[2020-12-17 14:23:04.775] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:36:25.256] [Thread-63] Shutting down the Executor Pool for PollingServerListUpdater 
[2020-12-17 14:36:25.261] [SpringContextShutdownHook] stopping server: Undertow - 2.1.4.Final 
[2020-12-17 14:36:25.266] [SpringContextShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet' 
[2020-12-17 14:36:25.266] [SpringContextShutdownHook] Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:36:25.267] [SpringContextShutdownHook] [LISTENER] removing DEFAULT_GROUP@@mkk-base-auth with DEFAULT from listener map 
[2020-12-17 14:36:25.268] [SpringContextShutdownHook] De-registering from Nacos Server now... 
[2020-12-17 14:36:25.268] [SpringContextShutdownHook] [BEAT] removing beat: DEFAULT_GROUP@@mkk-base-auth:192.168.139.1:3000 from beat map. 
[2020-12-17 14:36:25.268] [SpringContextShutdownHook] [DEREGISTER-SERVICE] public deregistering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}} 
[2020-12-17 14:36:25.269] [SpringContextShutdownHook] De-registration finished. 
[2020-12-17 14:36:25.270] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin 
[2020-12-17 14:37:50.269] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 14:37:50.512] [main] Post-processing PropertySource instances 
[2020-12-17 14:37:50.556] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:37:50.557] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:50.557] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:50.557] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:50.557] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:37:50.558] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:50.558] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:50.587] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:37:50.589] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:37:50.590] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:37:50.963] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 14:37:50.963] [main] The following profiles are active: dev 
[2020-12-17 14:37:51.543] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:37:51.545] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:37:51.724] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 14:37:51.725] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 14:37:51.741] [main] Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces. 
[2020-12-17 14:37:51.798] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:37:51.870] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 14:37:51.881] [main] Post-processing PropertySource instances 
[2020-12-17 14:37:51.890] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:37:51.890] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:37:51.890] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:37:51.899] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:37:52.090] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:37:52.090] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:37:52.143] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:37:52.213] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:37:52.374] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 14:37:52.394] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 14:37:52.394] [main] Root WebApplicationContext: initialization completed in 1417 ms 
[2020-12-17 14:37:52.902] [main] Initializing ExecutorService 
[2020-12-17 14:37:53.164] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:37:53.164] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:37:53.167] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:37:53.167] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:37:53.278] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:37:53.307] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 14:37:53.590] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:37:53.595] [main] initializer namespace from System Property :null 
[2020-12-17 14:37:53.596] [main] initializer namespace from System Environment :null 
[2020-12-17 14:37:53.596] [main] initializer namespace from System Property :null 
[2020-12-17 14:37:53.978] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 14:37:54.017] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12421766, org.springframework.security.web.context.SecurityContextPersistenceFilter@69e36fe3, org.springframework.security.web.header.HeaderWriterFilter@56b751b1, org.springframework.security.web.authentication.logout.LogoutFilter@30ef32eb, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@7ebc5be6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@77d54a41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46188a89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71ee2fff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e44cb34, org.springframework.security.web.session.SessionManagementFilter@5f5a33ed, org.springframework.security.web.access.ExceptionTranslationFilter@163df259, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b64f771] 
[2020-12-17 14:37:54.021] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a552721, org.springframework.security.web.context.SecurityContextPersistenceFilter@16944b58, org.springframework.security.web.header.HeaderWriterFilter@5d74507c, org.springframework.security.web.authentication.logout.LogoutFilter@3ef46749, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40b54762, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1dbc607d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62b42406, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3815a7d1, org.springframework.security.web.session.SessionManagementFilter@2a984952, org.springframework.security.web.access.ExceptionTranslationFilter@c30f26d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@632b5c79] 
[2020-12-17 14:37:54.389] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 14:37:54.394] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 14:37:54.516] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 14:37:54.523] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 14:37:54.528] [main] XNIO version 3.8.0.Final 
[2020-12-17 14:37:54.533] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 14:37:54.665] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 14:37:54.701] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 14:37:54.704] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 14:37:54.705] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:37:54.707] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 14:37:54.909] [main] Started AuthApplication in 5.326 seconds (JVM running for 6.064) 
[2020-12-17 14:37:54.912] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 14:37:54.913] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:37:54.914] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 14:37:54.914] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:37:54.914] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 14:37:54.914] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:37:55.325] [RMI TCP Connection(2)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 14:37:55.325] [RMI TCP Connection(2)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 14:37:55.331] [RMI TCP Connection(2)-192.168.139.1] Completed initialization in 6 ms 
[2020-12-17 14:37:55.521] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:37:55.524] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:37:56.377] [RMI TCP Connection(1)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 14:39:55.788] [XNIO-1 task-1] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 14:39:55.950] [XNIO-1 task-1] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：163 毫秒 
[2020-12-17 14:40:02.119] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:40:02.132] [XNIO-1 task-1] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 14:40:02.137] [XNIO-1 task-1] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 14:40:02.141] [XNIO-1 task-1] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:40:02.142] [XNIO-1 task-1] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:40:02.150] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:40:02.151] [XNIO-1 task-1] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@31a10662 
[2020-12-17 14:40:02.587] [XNIO-1 task-1] 用户：admin 登录成功 
[2020-12-17 14:40:03.142] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:41:47.455] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 14:41:47.730] [main] Post-processing PropertySource instances 
[2020-12-17 14:41:47.781] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:41:47.782] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:47.782] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:47.782] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:47.783] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:41:47.783] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:47.783] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:47.820] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:41:47.824] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:41:47.825] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:41:48.225] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 14:41:48.225] [main] The following profiles are active: dev 
[2020-12-17 14:41:48.866] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:41:48.869] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:41:49.074] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 14:41:49.076] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 14:41:49.095] [main] Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces. 
[2020-12-17 14:41:49.161] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 14:41:49.247] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 14:41:49.260] [main] Post-processing PropertySource instances 
[2020-12-17 14:41:49.269] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:41:49.269] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:41:49.269] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:41:49.269] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 14:41:49.270] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 14:41:49.270] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 14:41:49.315] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 14:41:49.494] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 14:41:49.494] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 14:41:49.556] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:41:49.638] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 14:41:49.825] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 14:41:49.849] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 14:41:49.850] [main] Root WebApplicationContext: initialization completed in 1610 ms 
[2020-12-17 14:41:50.442] [main] Initializing ExecutorService 
[2020-12-17 14:41:50.736] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:41:50.736] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:41:50.739] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 14:41:50.739] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 14:41:50.866] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 14:41:50.899] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 14:41:51.196] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 14:41:51.202] [main] initializer namespace from System Property :null 
[2020-12-17 14:41:51.203] [main] initializer namespace from System Environment :null 
[2020-12-17 14:41:51.203] [main] initializer namespace from System Property :null 
[2020-12-17 14:41:51.662] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 14:41:51.704] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ffa8126, org.springframework.security.web.context.SecurityContextPersistenceFilter@39451d92, org.springframework.security.web.header.HeaderWriterFilter@3d1c8f35, org.springframework.security.web.authentication.logout.LogoutFilter@79e15c4a, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@7b11ff9a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1dbf727a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46610fc9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@eb1e868, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23ee70a7, org.springframework.security.web.session.SessionManagementFilter@498f5728, org.springframework.security.web.access.ExceptionTranslationFilter@eee26bd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cd28235] 
[2020-12-17 14:41:51.708] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17d45cfb, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d686622, org.springframework.security.web.header.HeaderWriterFilter@54ec8ab3, org.springframework.security.web.authentication.logout.LogoutFilter@4678ec43, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@694f0655, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@400df2b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70044113, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fb00a6d, org.springframework.security.web.session.SessionManagementFilter@71b32407, org.springframework.security.web.access.ExceptionTranslationFilter@7804a783, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2643ed03] 
[2020-12-17 14:41:52.087] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 14:41:52.093] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 14:41:52.242] [main] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:41:52.361] [main] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:41:52.362] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 14:41:52.370] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 14:41:52.376] [main] XNIO version 3.8.0.Final 
[2020-12-17 14:41:52.382] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 14:41:52.415] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 14:41:52.454] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 14:41:52.458] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 14:41:52.459] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:41:52.460] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 14:41:52.669] [main] Started AuthApplication in 5.875 seconds (JVM running for 6.65) 
[2020-12-17 14:41:52.673] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 14:41:52.674] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:41:52.674] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 14:41:52.674] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:41:52.674] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 14:41:52.674] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 14:41:53.197] [RMI TCP Connection(3)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 14:41:53.197] [RMI TCP Connection(3)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 14:41:53.204] [RMI TCP Connection(3)-192.168.139.1] Completed initialization in 7 ms 
[2020-12-17 14:41:54.254] [RMI TCP Connection(2)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 14:44:29.997] [XNIO-1 task-3] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 14:44:30.101] [XNIO-1 task-3] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：105 毫秒 
[2020-12-17 14:44:34.119] [XNIO-1 task-3] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:44:34.134] [XNIO-1 task-3] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 14:44:34.140] [XNIO-1 task-3] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 14:44:34.145] [XNIO-1 task-3] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:44:34.146] [XNIO-1 task-3] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:44:34.155] [XNIO-1 task-3] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:44:34.156] [XNIO-1 task-3] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@7355cce5 
[2020-12-17 14:44:39.509] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 14:45:43.558] [com.alibaba.nacos.naming.beat.sender] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='DEFAULT_GROUP@@mkk-base-auth', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:46:29.685] [com.alibaba.nacos.client.naming.updater] [NA] failed to request 
java.net.SocketTimeoutException: null
	at java.net.SocksSocketImpl.remainingMillis(SocksSocketImpl.java:111)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:840)
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:678)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at com.alibaba.nacos.common.http.client.response.JdkHttpClientResponse.getStatusCode(JdkHttpClientResponse.java:75)
	at com.alibaba.nacos.common.http.client.handler.AbstractResponseHandler.handle(AbstractResponseHandler.java:43)
	at com.alibaba.nacos.common.http.client.NacosRestTemplate.execute(NacosRestTemplate.java:483)
	at com.alibaba.nacos.common.http.client.NacosRestTemplate.exchangeForm(NacosRestTemplate.java:427)
	at com.alibaba.nacos.client.naming.net.NamingProxy.callServer(NamingProxy.java:599)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqApi(NamingProxy.java:524)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqApi(NamingProxy.java:491)
	at com.alibaba.nacos.client.naming.net.NamingProxy.reqApi(NamingProxy.java:486)
	at com.alibaba.nacos.client.naming.net.NamingProxy.queryList(NamingProxy.java:400)
	at com.alibaba.nacos.client.naming.core.HostReactor.updateService(HostReactor.java:339)
	at com.alibaba.nacos.client.naming.core.HostReactor$UpdateTask.run(HostReactor.java:420)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2020-12-17 14:46:32.542] [XNIO-1 task-3] 用户：admin 登录成功 
[2020-12-17 14:46:32.629] [XNIO-1 task-3] Handling error: IOException, 你的主机中的软件中止了一个已建立的连接。 
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at org.xnio.nio.NioSocketConduit.write(NioSocketConduit.java:162)
	at io.undertow.server.protocol.http.HttpResponseConduit.write(HttpResponseConduit.java:655)
	at io.undertow.conduits.ChunkedStreamSinkConduit.doWrite(ChunkedStreamSinkConduit.java:166)
	at io.undertow.conduits.ChunkedStreamSinkConduit.write(ChunkedStreamSinkConduit.java:128)
	at org.xnio.conduits.ConduitStreamSinkChannel.write(ConduitStreamSinkChannel.java:150)
	at io.undertow.channels.DetachableStreamSinkChannel.write(DetachableStreamSinkChannel.java:240)
	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.write(HttpServerExchange.java:2117)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.writeBufferBlocking(ServletOutputStreamImpl.java:575)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flushInternal(ServletOutputStreamImpl.java:490)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flush(ServletOutputStreamImpl.java:477)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:520)
	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1176)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3060)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:388)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1838)
	at org.springframework.security.oauth2.common.OAuth2AccessTokenJackson2Serializer.serialize(OAuth2AccessTokenJackson2Serializer.java:68)
	at org.springframework.security.oauth2.common.OAuth2AccessTokenJackson2Serializer.serialize(OAuth2AccessTokenJackson2Serializer.java:35)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1516)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1006)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: java.io.IOException: UT010029: Stream is closed
		at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
		at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1203)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:349)
		... 100 common frames omitted
[2020-12-17 14:46:32.635] [XNIO-1 task-3] Failure in @ExceptionHandler org.springframework.security.oauth2.provider.endpoint.TokenEndpoint#handleException(Exception) 
java.io.IOException: UT010029: Stream is closed
	at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
	at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1173)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3060)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:388)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1838)
	at com.cloud.mkk.common.security.component.MicroAuth2ExceptionSerializer.serialize(MicroAuth2ExceptionSerializer.java:26)
	at com.cloud.mkk.common.security.component.MicroAuth2ExceptionSerializer.serialize(MicroAuth2ExceptionSerializer.java:16)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1516)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1006)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: java.io.IOException: UT010029: Stream is closed
		at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
		at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1203)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:349)
		... 103 common frames omitted
[2020-12-17 14:50:25.693] [XNIO-1 task-3] 用户：admin 登录成功 
[2020-12-17 14:50:52.159] [XNIO-1 task-3] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 14:50:52.174] [XNIO-1 task-3] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：15 毫秒 
[2020-12-17 14:52:18.742] [com.alibaba.nacos.naming.beat.sender] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='DEFAULT_GROUP@@mkk-base-auth', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:52:19.276] [com.alibaba.nacos.client.naming.updater] removed ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:52:19.277] [com.alibaba.nacos.client.naming.updater] current ips:(0) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [] 
[2020-12-17 14:52:45.470] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:53:05.053] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:53:11.124] [XNIO-1 task-3] 用户：admin 登录成功 
[2020-12-17 14:54:34.757] [com.alibaba.nacos.naming.beat.sender] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='DEFAULT_GROUP@@mkk-base-auth', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 14:54:34.757] [com.alibaba.nacos.client.naming.updater] removed ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:54:34.758] [com.alibaba.nacos.client.naming.updater] current ips:(0) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [] 
[2020-12-17 14:55:37.530] [XNIO-1 task-3] Handling error: IOException, 你的主机中的软件中止了一个已建立的连接。 
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at org.xnio.nio.NioSocketConduit.write(NioSocketConduit.java:162)
	at io.undertow.server.protocol.http.HttpResponseConduit.processWrite(HttpResponseConduit.java:260)
	at io.undertow.server.protocol.http.HttpResponseConduit.write(HttpResponseConduit.java:642)
	at io.undertow.conduits.ChunkedStreamSinkConduit.doWrite(ChunkedStreamSinkConduit.java:166)
	at io.undertow.conduits.ChunkedStreamSinkConduit.write(ChunkedStreamSinkConduit.java:128)
	at org.xnio.conduits.ConduitStreamSinkChannel.write(ConduitStreamSinkChannel.java:150)
	at io.undertow.channels.DetachableStreamSinkChannel.write(DetachableStreamSinkChannel.java:240)
	at io.undertow.server.HttpServerExchange$WriteDispatchChannel.write(HttpServerExchange.java:2117)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.writeBufferBlocking(ServletOutputStreamImpl.java:575)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flushInternal(ServletOutputStreamImpl.java:490)
	at io.undertow.servlet.spec.ServletOutputStreamImpl.flush(ServletOutputStreamImpl.java:477)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:520)
	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1176)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3060)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:388)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1838)
	at org.springframework.security.oauth2.common.OAuth2AccessTokenJackson2Serializer.serialize(OAuth2AccessTokenJackson2Serializer.java:68)
	at org.springframework.security.oauth2.common.OAuth2AccessTokenJackson2Serializer.serialize(OAuth2AccessTokenJackson2Serializer.java:35)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1516)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1006)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: java.io.IOException: UT010029: Stream is closed
		at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
		at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1203)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:349)
		... 100 common frames omitted
[2020-12-17 14:55:37.531] [XNIO-1 task-3] Failure in @ExceptionHandler org.springframework.security.oauth2.provider.endpoint.TokenEndpoint#handleException(Exception) 
java.io.IOException: UT010029: Stream is closed
	at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
	at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1173)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3060)
	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:388)
	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1838)
	at com.cloud.mkk.common.security.component.MicroAuth2ExceptionSerializer.serialize(MicroAuth2ExceptionSerializer.java:26)
	at com.cloud.mkk.common.security.component.MicroAuth2ExceptionSerializer.serialize(MicroAuth2ExceptionSerializer.java:16)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1516)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1006)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:345)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:665)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:204)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
	Suppressed: java.io.IOException: UT010029: Stream is closed
		at io.undertow.servlet.spec.ServletOutputStreamImpl.write(ServletOutputStreamImpl.java:138)
		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645)
		at org.springframework.util.StreamUtils$NonClosingOutputStream.write(StreamUtils.java:287)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(UTF8JsonGenerator.java:2159)
		at com.fasterxml.jackson.core.json.UTF8JsonGenerator.close(UTF8JsonGenerator.java:1203)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:349)
		... 103 common frames omitted
[2020-12-17 14:55:41.530] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 14:55:41.531] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatInterval":5000,"instanceHeartBeatTimeOut":15000}] 
[2020-12-17 15:00:44.936] [XNIO-1 task-3] 用户：admin 登录成功 
[2020-12-17 15:00:49.433] [XNIO-1 task-3] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 15:00:49.451] [XNIO-1 task-3] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：18 毫秒 
[2020-12-17 15:02:46.382] [Thread-58] Shutting down the Executor Pool for PollingServerListUpdater 
[2020-12-17 15:02:46.385] [SpringContextShutdownHook] stopping server: Undertow - 2.1.4.Final 
[2020-12-17 15:02:46.389] [SpringContextShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet' 
[2020-12-17 15:02:46.390] [SpringContextShutdownHook] Shutting down ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 15:02:46.390] [SpringContextShutdownHook] [LISTENER] removing DEFAULT_GROUP@@mkk-base-auth with DEFAULT from listener map 
[2020-12-17 15:02:46.391] [SpringContextShutdownHook] De-registering from Nacos Server now... 
[2020-12-17 15:02:46.391] [SpringContextShutdownHook] [BEAT] removing beat: DEFAULT_GROUP@@mkk-base-auth:192.168.139.1:3000 from beat map. 
[2020-12-17 15:02:46.392] [SpringContextShutdownHook] [DEREGISTER-SERVICE] public deregistering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={}} 
[2020-12-17 15:02:46.393] [SpringContextShutdownHook] De-registration finished. 
[2020-12-17 15:02:46.393] [SpringContextShutdownHook] com.alibaba.nacos.client.naming.beat.BeatReactor do shutdown begin 
[2020-12-17 15:12:35.138] [background-preinit] HV000001: Hibernate Validator 6.1.6.Final 
[2020-12-17 15:12:35.381] [main] Post-processing PropertySource instances 
[2020-12-17 15:12:35.428] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 15:12:35.429] [main] Converting PropertySource bootstrap [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:35.429] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:35.429] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:35.429] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 15:12:35.429] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:35.429] [main] Converting PropertySource applicationConfig: [classpath:/bootstrap.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:35.460] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 15:12:35.463] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 15:12:35.464] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 15:12:35.839] [main] Bootstraping jasypt-string-boot auto configuration in context: mkk-base-auth-1 
[2020-12-17 15:12:35.839] [main] The following profiles are active: dev 
[2020-12-17 15:12:36.426] [main] Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format. 
[2020-12-17 15:12:36.428] [main] Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format. 
[2020-12-17 15:12:36.618] [main] Multiple Spring Data modules found, entering strict repository configuration mode! 
[2020-12-17 15:12:36.619] [main] Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2020-12-17 15:12:36.636] [main] Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces. 
[2020-12-17 15:12:36.695] [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format. 
[2020-12-17 15:12:36.772] [main] BeanFactory id=c5afb1fe-4f85-3e65-b81a-524c4b372962 
[2020-12-17 15:12:36.783] [main] Post-processing PropertySource instances 
[2020-12-17 15:12:36.792] [main] Converting PropertySource bootstrapProperties-mkk-base-auth-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource bootstrapProperties-mkk-base-auth.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource bootstrapProperties-mkk-base-auth,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource bootstrapProperties-application-dev.yml,DEFAULT_GROUP [org.springframework.cloud.bootstrap.config.BootstrapPropertySource] to EncryptableEnumerablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy 
[2020-12-17 15:12:36.793] [main] Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource springCloudDefaultProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper 
[2020-12-17 15:12:36.793] [main] Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper 
[2020-12-17 15:12:36.802] [main] Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter 
[2020-12-17 15:12:36.996] [main] Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver 
[2020-12-17 15:12:36.996] [main] Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector 
[2020-12-17 15:12:37.050] [main] Bean 'spring.cloud.sentinel-com.alibaba.cloud.sentinel.SentinelProperties' of type [com.alibaba.cloud.sentinel.SentinelProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 15:12:37.122] [main] Bean 'com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration' of type [com.alibaba.cloud.sentinel.custom.SentinelAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
[2020-12-17 15:12:37.289] [main] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used 
[2020-12-17 15:12:37.309] [main] Initializing Spring embedded WebApplicationContext 
[2020-12-17 15:12:37.310] [main] Root WebApplicationContext: initialization completed in 1458 ms 
[2020-12-17 15:12:37.836] [main] Initializing ExecutorService 
[2020-12-17 15:12:38.098] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 15:12:38.098] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 15:12:38.101] [main] No URLs will be polled as dynamic configuration sources. 
[2020-12-17 15:12:38.101] [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 
[2020-12-17 15:12:38.212] [main] Initializing ExecutorService 'applicationTaskExecutor' 
[2020-12-17 15:12:38.242] [main] [Sentinel Starter] register SentinelWebInterceptor with urlPatterns: [/**]. 
[2020-12-17 15:12:38.533] [main] Initializing ExecutorService 'Nacos-Watch-Task-Scheduler' 
[2020-12-17 15:12:38.538] [main] initializer namespace from System Property :null 
[2020-12-17 15:12:38.538] [main] initializer namespace from System Environment :null 
[2020-12-17 15:12:38.539] [main] initializer namespace from System Property :null 
[2020-12-17 15:12:38.936] [main] Creating filter chain: Ant [pattern='/css/**'], [] 
[2020-12-17 15:12:38.986] [main] Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ef46749, org.springframework.security.web.context.SecurityContextPersistenceFilter@46188a89, org.springframework.security.web.header.HeaderWriterFilter@5f5a33ed, org.springframework.security.web.authentication.logout.LogoutFilter@bb5f9d, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@4cadd4d4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@62b42406, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d0b447b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37fca349, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40b54762, org.springframework.security.web.session.SessionManagementFilter@69e36fe3, org.springframework.security.web.access.ExceptionTranslationFilter@3c3cd13a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@731e0bff] 
[2020-12-17 15:12:38.990] [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45f241df, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e020dd1, org.springframework.security.web.header.HeaderWriterFilter@24dc150c, org.springframework.security.web.authentication.logout.LogoutFilter@361f26b4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1d9ff1e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bbc02ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f0c1ae1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f36f34d, org.springframework.security.web.session.SessionManagementFilter@1d2d4d7a, org.springframework.security.web.access.ExceptionTranslationFilter@3815a7d1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c8abec7] 
[2020-12-17 15:12:39.353] [main] All Spring Cloud Security modules and starters are deprecated. They will be moved to individual projects in the next major release. 
[2020-12-17 15:12:39.358] [main] Exposing 20 endpoint(s) beneath base path '/actuator' 
[2020-12-17 15:12:39.486] [main] [LISTENER] adding DEFAULT_GROUP@@mkk-base-auth with DEFAULT to listener map 
[2020-12-17 15:12:39.493] [main] starting server: Undertow - 2.1.4.Final 
[2020-12-17 15:12:39.498] [main] XNIO version 3.8.0.Final 
[2020-12-17 15:12:39.503] [main] XNIO NIO Implementation Version 3.8.0.Final 
[2020-12-17 15:12:39.533] [main] JBoss Threads version 3.1.0.Final 
[2020-12-17 15:12:39.674] [main] Undertow started on port(s) 3000 (http) 
[2020-12-17 15:12:39.677] [main] [BEAT] adding beat: BeatInfo{port=3000, ip='192.168.139.1', weight=1.0, serviceName='DEFAULT_GROUP@@mkk-base-auth', cluster='DEFAULT', metadata={preserved.register.source=SPRING_CLOUD}, scheduled=false, period=5000, stopped=false} to beat map. 
[2020-12-17 15:12:39.677] [main] [REGISTER-SERVICE] public registering service DEFAULT_GROUP@@mkk-base-auth with instance: Instance{instanceId='null', ip='192.168.139.1', port=3000, weight=1.0, healthy=true, enabled=true, ephemeral=true, clusterName='DEFAULT', serviceName='null', metadata={preserved.register.source=SPRING_CLOUD}} 
[2020-12-17 15:12:39.681] [main] nacos registry, DEFAULT_GROUP mkk-base-auth 192.168.139.1:3000 register finished 
[2020-12-17 15:12:39.885] [main] Started AuthApplication in 5.387 seconds (JVM running for 6.052) 
[2020-12-17 15:12:39.888] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth-dev.yml+DEFAULT_GROUP 
[2020-12-17 15:12:39.889] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth-dev.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 15:12:39.889] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth.yml+DEFAULT_GROUP 
[2020-12-17 15:12:39.889] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth.yml, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 15:12:39.889] [main] [fixed-10.101.128.148_8848] [subscribe] mkk-base-auth+DEFAULT_GROUP 
[2020-12-17 15:12:39.889] [main] [fixed-10.101.128.148_8848] [add-listener] ok, tenant=, dataId=mkk-base-auth, group=DEFAULT_GROUP, cnt=1 
[2020-12-17 15:12:40.437] [RMI TCP Connection(2)-192.168.139.1] Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2020-12-17 15:12:40.437] [RMI TCP Connection(2)-192.168.139.1] Initializing Servlet 'dispatcherServlet' 
[2020-12-17 15:12:40.443] [RMI TCP Connection(2)-192.168.139.1] Completed initialization in 6 ms 
[2020-12-17 15:12:40.493] [com.alibaba.nacos.client.naming.updater] new ips(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000}] 
[2020-12-17 15:12:40.495] [com.alibaba.nacos.client.naming.updater] current ips:(1) service: DEFAULT_GROUP@@mkk-base-auth@@DEFAULT -> [{"instanceId":"192.168.139.1#3000#DEFAULT#DEFAULT_GROUP@@mkk-base-auth","ip":"192.168.139.1","port":3000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-base-auth","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000}] 
[2020-12-17 15:12:41.488] [RMI TCP Connection(3)-192.168.139.1] {dataSource-1} inited 
[2020-12-17 15:13:13.594] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 15:13:13.607] [XNIO-1 task-1] Client: mkk-rbac-biz instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null 
[2020-12-17 15:13:13.612] [XNIO-1 task-1] Using serverListUpdater PollingServerListUpdater 
[2020-12-17 15:13:13.615] [XNIO-1 task-1] new ips(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000}] 
[2020-12-17 15:13:13.616] [XNIO-1 task-1] current ips:(1) service: DEFAULT_GROUP@@mkk-rbac-biz -> [{"instanceId":"192.168.139.1#4000#DEFAULT#DEFAULT_GROUP@@mkk-rbac-biz","ip":"192.168.139.1","port":4000,"weight":1.0,"healthy":true,"enabled":true,"ephemeral":true,"clusterName":"DEFAULT","serviceName":"DEFAULT_GROUP@@mkk-rbac-biz","metadata":{"preserved.register.source":"SPRING_CLOUD"},"ipDeleteTimeout":30000,"instanceHeartBeatTimeOut":15000,"instanceHeartBeatInterval":5000}] 
[2020-12-17 15:13:13.625] [XNIO-1 task-1] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 15:13:13.626] [XNIO-1 task-1] DynamicServerListLoadBalancer for client mkk-rbac-biz initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=mkk-rbac-biz,current list of Servers=[192.168.139.1:4000],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.139.1:4000;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@47da7d68 
[2020-12-17 15:13:14.136] [XNIO-1 task-1] 用户：admin 登录成功 
[2020-12-17 15:13:14.616] [PollingServerListUpdater-0] Flipping property: mkk-rbac-biz.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647 
[2020-12-17 17:31:20.409] [XNIO-1 task-1] <st>调用方法： token/logout，ip=10.101.128.64 
[2020-12-17 17:31:20.434] [XNIO-1 task-1] <ed>调用方法： token/logout，ip=10.101.128.64，执行时间：26 毫秒 
[2020-12-17 17:31:23.963] [XNIO-1 task-1] 用户：admin 登录成功 
